{"version":3,"sources":["Congrats.test.js"],"names":["Enzyme","configure","adapter","EnzymeAdapter","setup","props","test","wrapper","success","congratsComp","expect","length","toBe","text","message","not","Congrats"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AAIA;;AACA;;;;AAEAA,gBAAOC,SAAP,CAAiB;AAAEC,EAAAA,OAAO,EAAE,IAAIC,2BAAJ;AAAX,CAAjB;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAG,EAAT,KAAgB;AAC1B,SAAO,qBAAQ,6BAAC,iBAAD,oBAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR,CAAP;AACH,CAFD;;AAIAC,IAAI,CAAC,6BAAD,EAAgC,MAAM;AACtC,QAAMC,OAAO,GAAGH,KAAK,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAArB;AACA,QAAMC,YAAY,GAAG,8BAAeF,OAAf,EAAwB,oBAAxB,CAArB;AAEAG,EAAAA,MAAM,CAACD,YAAY,CAACE,MAAd,CAAN,CAA4BC,IAA5B,CAAiC,CAAjC;AACH,CALG,CAAJ;AAOAN,IAAI,CAAC,8CAAD,EAAiD,MAAM;AACvD,QAAMC,OAAO,GAAGH,KAAK,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAArB;AACA,QAAMC,YAAY,GAAG,8BAAeF,OAAf,EAAwB,oBAAxB,CAArB;AAEAG,EAAAA,MAAM,CAACD,YAAY,CAACI,IAAb,EAAD,CAAN,CAA4BD,IAA5B,CAAiC,EAAjC;AACH,CALG,CAAJ;AAOAN,IAAI,CAAC,yCAAD,EAA4C,MAAM;AAClD,QAAMC,OAAO,GAAGH,KAAK,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAArB;AACA,QAAMM,OAAO,GAAG,8BAAeP,OAAf,EAAwB,oBAAxB,CAAhB;AAEAG,EAAAA,MAAM,CAACI,OAAO,CAACD,IAAR,EAAD,CAAN,CAAuBE,GAAvB,CAA2BH,IAA3B,CAAgC,CAAhC;AACH,CALG,CAAJ;AAOAN,IAAI,CAAC,8CAAD,EAAiD,MAAM;AACvD,4BAAW;AAAEE,IAAAA,OAAO,EAAE;AAAX,GAAX,EAA+BQ,iBAA/B;AAEH,CAHG,CAAJ","sourcesContent":["import React from 'react'\nimport Enzyme, { shallow } from 'enzyme'\nimport EnzymeAdapter from 'enzyme-adapter-react-16';\n\n\n\nimport Congrats from './Congrats';\nimport { findByTestAttr, checkProps } from '../test/testUtil';\n\nEnzyme.configure({ adapter: new EnzymeAdapter() })\n\nconst setup = (props = {}) => {\n    return shallow(<Congrats {...props} />)\n}\n\ntest('should render without error', () => {\n    const wrapper = setup({ success: false });\n    const congratsComp = findByTestAttr(wrapper, \"congrats-component\")\n\n    expect(congratsComp.length).toBe(1)\n})\n\ntest('should not render success when prop is false', () => {\n    const wrapper = setup({ success: false });\n    const congratsComp = findByTestAttr(wrapper, \"congrats-component\")\n\n    expect(congratsComp.text()).toBe('')\n})\n\ntest('should render success when prop is true', () => {\n    const wrapper = setup({ success: true });\n    const message = findByTestAttr(wrapper, \"congrats-component\")\n\n    expect(message.text()).not.toBe(0)\n})\n\ntest('should not throw warning with expected props', () => {\n    checkProps({ success: false }, Congrats)\n\n})\n"]}