{"version":3,"sources":["Congrats.test.js"],"names":["defaultProps","success","setup","props","setupProps","test","wrapper","congratsComp","expect","length","toBe","text","message","not","Congrats"],"mappings":";;;;;;AAAA;;AACA;;AAEA;;AACA;;;AAGA,MAAMA,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAArB;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAG,EAAT,KAAgB;AAC1B,QAAMC,UAAU,mCAAQJ,YAAR,EAAyBG,KAAzB,CAAhB;AACA,SAAO,qBAAQ,6BAAC,iBAAD,oBAAcC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR,CAAP;AACH,CAHD;;AAKAC,IAAI,CAAC,6BAAD,EAAgC,MAAM;AACtC,QAAMC,OAAO,GAAGJ,KAAK,CAAC;AAAED,IAAAA,OAAO,EAAE;AAAX,GAAD,CAArB;AACA,QAAMM,YAAY,GAAG,8BAAeD,OAAf,EAAwB,oBAAxB,CAArB;AAEAE,EAAAA,MAAM,CAACD,YAAY,CAACE,MAAd,CAAN,CAA4BC,IAA5B,CAAiC,CAAjC;AACH,CALG,CAAJ;AAOAL,IAAI,CAAC,8CAAD,EAAiD,MAAM;AACvD,QAAMC,OAAO,GAAGJ,KAAK,CAAC;AAAED,IAAAA,OAAO,EAAE;AAAX,GAAD,CAArB;AACA,QAAMM,YAAY,GAAG,8BAAeD,OAAf,EAAwB,oBAAxB,CAArB;AAEAE,EAAAA,MAAM,CAACD,YAAY,CAACI,IAAb,EAAD,CAAN,CAA4BD,IAA5B,CAAiC,EAAjC;AACH,CALG,CAAJ;AAOAL,IAAI,CAAC,yCAAD,EAA4C,MAAM;AAClD,QAAMC,OAAO,GAAGJ,KAAK,CAAC;AAAED,IAAAA,OAAO,EAAE;AAAX,GAAD,CAArB;AACA,QAAMW,OAAO,GAAG,8BAAeN,OAAf,EAAwB,oBAAxB,CAAhB;AAEAE,EAAAA,MAAM,CAACI,OAAO,CAACD,IAAR,EAAD,CAAN,CAAuBE,GAAvB,CAA2BH,IAA3B,CAAgC,CAAhC;AACH,CALG,CAAJ;AAOAL,IAAI,CAAC,8CAAD,EAAiD,MAAM;AACvD,4BAAW;AAAEJ,IAAAA,OAAO,EAAE;AAAX,GAAX,EAA+Ba,iBAA/B;AAEH,CAHG,CAAJ","sourcesContent":["import React from 'react'\nimport { shallow } from 'enzyme'\n\nimport Congrats from './Congrats';\nimport { findByTestAttr, checkProps } from '../test/testUtil';\n\n\nconst defaultProps = { success: false }\n\nconst setup = (props = {}) => {\n    const setupProps = { ...defaultProps, ...props }\n    return shallow(<Congrats {...setupProps} />)\n}\n\ntest('should render without error', () => {\n    const wrapper = setup({ success: false });\n    const congratsComp = findByTestAttr(wrapper, \"congrats-component\")\n\n    expect(congratsComp.length).toBe(1)\n})\n\ntest('should not render success when prop is false', () => {\n    const wrapper = setup({ success: false });\n    const congratsComp = findByTestAttr(wrapper, \"congrats-component\")\n\n    expect(congratsComp.text()).toBe('')\n})\n\ntest('should render success when prop is true', () => {\n    const wrapper = setup({ success: true });\n    const message = findByTestAttr(wrapper, \"congrats-component\")\n\n    expect(message.text()).not.toBe(0)\n})\n\ntest('should not throw warning with expected props', () => {\n    checkProps({ success: false }, Congrats)\n\n})\n"]}