d9051ecc03f7c589285aeded6ecd2526
"use strict";

var _interopRequireWildcard = require("/home/jia/Desktop/tests/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/jia/Desktop/tests/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _logo = _interopRequireDefault(require("./logo.svg"));

require("./App.css");

var _jsxFileName = "/home/jia/Desktop/tests/src/App.js";

class App extends _react.Component {
  constructor(props) {
    super(props);
    this.state = {
      counter: 0,
      showError: false
    };
  }

  render() {
    return _react.default.createElement("div", {
      "data-test": "component-App",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 16
      },
      __self: this
    }, _react.default.createElement("h1", {
      "data-test": "counter-display",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 17
      },
      __self: this
    }, "The counter is ", this.state.counter), _react.default.createElement("h3", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 18
      },
      __self: this
    }), _react.default.createElement("button", {
      "data-test": "increment",
      onClick: () => this.setState({
        counter: this.state.counter + 1
      }),
      __source: {
        fileName: _jsxFileName,
        lineNumber: 19
      },
      __self: this
    }, "Increment"));
  }

}

var _default = App;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFwcC5qcyJdLCJuYW1lcyI6WyJBcHAiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwic3RhdGUiLCJjb3VudGVyIiwic2hvd0Vycm9yIiwicmVuZGVyIiwic2V0U3RhdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxHQUFOLFNBQWtCQyxnQkFBbEIsQ0FBNEI7QUFDMUJDLEVBQUFBLFdBQVcsQ0FBQ0MsS0FBRCxFQUFPO0FBQ2hCLFVBQU1BLEtBQU47QUFFQSxTQUFLQyxLQUFMLEdBQVc7QUFDVEMsTUFBQUEsT0FBTyxFQUFDLENBREM7QUFFVEMsTUFBQUEsU0FBUyxFQUFHO0FBRkgsS0FBWDtBQUlEOztBQUNEQyxFQUFBQSxNQUFNLEdBQUc7QUFDUCxXQUNFO0FBQUssbUJBQVUsZUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQUNBO0FBQUksbUJBQVUsaUJBQWQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQWdELEtBQUtILEtBQUwsQ0FBV0MsT0FBM0QsQ0FEQSxFQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE1BRkEsRUFHRTtBQUFRLG1CQUFVLFdBQWxCO0FBQThCLE1BQUEsT0FBTyxFQUFFLE1BQUksS0FBS0csUUFBTCxDQUFjO0FBQUNILFFBQUFBLE9BQU8sRUFBQyxLQUFLRCxLQUFMLENBQVdDLE9BQVgsR0FBbUI7QUFBNUIsT0FBZCxDQUEzQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFIRixDQURGO0FBT0Q7O0FBakJ5Qjs7ZUFvQmJMLEciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGxvZ28gZnJvbSAnLi9sb2dvLnN2Zyc7XG5pbXBvcnQgJy4vQXBwLmNzcyc7XG5cbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKXtcbiAgICBzdXBlcihwcm9wcylcblxuICAgIHRoaXMuc3RhdGU9e1xuICAgICAgY291bnRlcjowLFxuICAgICAgc2hvd0Vycm9yIDogZmFsc2VcbiAgICB9XG4gIH1cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGRhdGEtdGVzdD1cImNvbXBvbmVudC1BcHBcIj5cbiAgICAgIDxoMSBkYXRhLXRlc3Q9XCJjb3VudGVyLWRpc3BsYXlcIj5UaGUgY291bnRlciBpcyB7dGhpcy5zdGF0ZS5jb3VudGVyfTwvaDE+XG4gICAgICA8aDM+PC9oMz5cbiAgICAgICAgPGJ1dHRvbiBkYXRhLXRlc3Q9XCJpbmNyZW1lbnRcIiBvbkNsaWNrPXsoKT0+dGhpcy5zZXRTdGF0ZSh7Y291bnRlcjp0aGlzLnN0YXRlLmNvdW50ZXIrMX0pfT5JbmNyZW1lbnQ8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQXBwO1xuIl19