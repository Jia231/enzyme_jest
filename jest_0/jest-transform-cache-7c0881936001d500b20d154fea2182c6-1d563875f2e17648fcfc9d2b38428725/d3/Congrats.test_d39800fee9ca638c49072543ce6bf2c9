4a88be5904e91ed331abbb4179891251
"use strict";

var _interopRequireDefault = require("/home/jia/Desktop/tests/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("/home/jia/Desktop/tests/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _react = _interopRequireDefault(require("react"));

var _enzyme = _interopRequireWildcard(require("enzyme"));

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

var _Congrats = _interopRequireDefault(require("./Congrats"));

var _testUtil = require("../test/testUtil");

var _jsxFileName = "/home/jia/Desktop/tests/src/Congrats.test.js";

_enzyme.default.configure({
  adapter: new _enzymeAdapterReact.default()
});

const setup = (props = {}) => {
  return (0, _enzyme.shallow)(_react.default.createElement(_Congrats.default, Object.assign({}, props, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 11
    },
    __self: void 0
  })));
};

test('should render without error', () => {
  const wrapper = setup();
  const congratsComp = (0, _testUtil.findByTestAtr)(wrapper, "congrats-component");
  expect(congratsComp.length).toBe(1);
});
test('should not render success when prop is false', () => {
  const wrapper = setup({
    success: false
  });
  const congratsComp = (0, _testUtil.findByTestAtr)(wrapper, "congrats-component");
  expect(congratsComp.text()).toBe('');
});
test('should render success when prop is true', () => {
  const wrapper = setup({
    success: true
  });
  const message = (0, _testUtil.findByTestAtr)(wrapper, "congrats-component");
  expect(message.text()).not.toBe(0);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbmdyYXRzLnRlc3QuanMiXSwibmFtZXMiOlsiRW56eW1lIiwiY29uZmlndXJlIiwiYWRhcHRlciIsIkVuenltZUFkYXB0ZXIiLCJzZXR1cCIsInByb3BzIiwidGVzdCIsIndyYXBwZXIiLCJjb25ncmF0c0NvbXAiLCJleHBlY3QiLCJsZW5ndGgiLCJ0b0JlIiwic3VjY2VzcyIsInRleHQiLCJtZXNzYWdlIiwibm90Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7OztBQUVBQSxnQkFBT0MsU0FBUCxDQUFpQjtBQUFFQyxFQUFBQSxPQUFPLEVBQUUsSUFBSUMsMkJBQUo7QUFBWCxDQUFqQjs7QUFFQSxNQUFNQyxLQUFLLEdBQUcsQ0FBQ0MsS0FBSyxHQUFHLEVBQVQsS0FBZ0I7QUFDMUIsU0FBTyxxQkFBUSw2QkFBQyxpQkFBRCxvQkFBY0EsS0FBZDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFSLENBQVA7QUFDSCxDQUZEOztBQUlBQyxJQUFJLENBQUMsNkJBQUQsRUFBZ0MsTUFBTTtBQUN0QyxRQUFNQyxPQUFPLEdBQUdILEtBQUssRUFBckI7QUFDQSxRQUFNSSxZQUFZLEdBQUcsNkJBQWNELE9BQWQsRUFBdUIsb0JBQXZCLENBQXJCO0FBRUFFLEVBQUFBLE1BQU0sQ0FBQ0QsWUFBWSxDQUFDRSxNQUFkLENBQU4sQ0FBNEJDLElBQTVCLENBQWlDLENBQWpDO0FBQ0gsQ0FMRyxDQUFKO0FBT0FMLElBQUksQ0FBQyw4Q0FBRCxFQUFpRCxNQUFNO0FBQ3ZELFFBQU1DLE9BQU8sR0FBR0gsS0FBSyxDQUFDO0FBQUVRLElBQUFBLE9BQU8sRUFBRTtBQUFYLEdBQUQsQ0FBckI7QUFDQSxRQUFNSixZQUFZLEdBQUcsNkJBQWNELE9BQWQsRUFBdUIsb0JBQXZCLENBQXJCO0FBRUFFLEVBQUFBLE1BQU0sQ0FBQ0QsWUFBWSxDQUFDSyxJQUFiLEVBQUQsQ0FBTixDQUE0QkYsSUFBNUIsQ0FBaUMsRUFBakM7QUFDSCxDQUxHLENBQUo7QUFPQUwsSUFBSSxDQUFDLHlDQUFELEVBQTRDLE1BQU07QUFDbEQsUUFBTUMsT0FBTyxHQUFHSCxLQUFLLENBQUM7QUFBRVEsSUFBQUEsT0FBTyxFQUFFO0FBQVgsR0FBRCxDQUFyQjtBQUNBLFFBQU1FLE9BQU8sR0FBRyw2QkFBY1AsT0FBZCxFQUF1QixvQkFBdkIsQ0FBaEI7QUFFQUUsRUFBQUEsTUFBTSxDQUFDSyxPQUFPLENBQUNELElBQVIsRUFBRCxDQUFOLENBQXVCRSxHQUF2QixDQUEyQkosSUFBM0IsQ0FBZ0MsQ0FBaEM7QUFDSCxDQUxHLENBQUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgRW56eW1lLCB7IHNoYWxsb3cgfSBmcm9tICdlbnp5bWUnXG5pbXBvcnQgRW56eW1lQWRhcHRlciBmcm9tICdlbnp5bWUtYWRhcHRlci1yZWFjdC0xNic7XG5cbmltcG9ydCBDb25ncmF0cyBmcm9tICcuL0NvbmdyYXRzJztcbmltcG9ydCB7IEZpbmRCeVRlc3RBdHRyLCBmaW5kQnlUZXN0QXRyIH0gZnJvbSAnLi4vdGVzdC90ZXN0VXRpbCc7XG5cbkVuenltZS5jb25maWd1cmUoeyBhZGFwdGVyOiBuZXcgRW56eW1lQWRhcHRlcigpIH0pXG5cbmNvbnN0IHNldHVwID0gKHByb3BzID0ge30pID0+IHtcbiAgICByZXR1cm4gc2hhbGxvdyg8Q29uZ3JhdHMgey4uLnByb3BzfSAvPilcbn1cblxudGVzdCgnc2hvdWxkIHJlbmRlciB3aXRob3V0IGVycm9yJywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBzZXR1cCgpO1xuICAgIGNvbnN0IGNvbmdyYXRzQ29tcCA9IGZpbmRCeVRlc3RBdHIod3JhcHBlciwgXCJjb25ncmF0cy1jb21wb25lbnRcIilcblxuICAgIGV4cGVjdChjb25ncmF0c0NvbXAubGVuZ3RoKS50b0JlKDEpXG59KVxuXG50ZXN0KCdzaG91bGQgbm90IHJlbmRlciBzdWNjZXNzIHdoZW4gcHJvcCBpcyBmYWxzZScsICgpID0+IHtcbiAgICBjb25zdCB3cmFwcGVyID0gc2V0dXAoeyBzdWNjZXNzOiBmYWxzZSB9KTtcbiAgICBjb25zdCBjb25ncmF0c0NvbXAgPSBmaW5kQnlUZXN0QXRyKHdyYXBwZXIsIFwiY29uZ3JhdHMtY29tcG9uZW50XCIpXG5cbiAgICBleHBlY3QoY29uZ3JhdHNDb21wLnRleHQoKSkudG9CZSgnJylcbn0pXG5cbnRlc3QoJ3Nob3VsZCByZW5kZXIgc3VjY2VzcyB3aGVuIHByb3AgaXMgdHJ1ZScsICgpID0+IHtcbiAgICBjb25zdCB3cmFwcGVyID0gc2V0dXAoeyBzdWNjZXNzOiB0cnVlIH0pO1xuICAgIGNvbnN0IG1lc3NhZ2UgPSBmaW5kQnlUZXN0QXRyKHdyYXBwZXIsIFwiY29uZ3JhdHMtY29tcG9uZW50XCIpXG5cbiAgICBleHBlY3QobWVzc2FnZS50ZXh0KCkpLm5vdC50b0JlKDApXG59KSJdfQ==