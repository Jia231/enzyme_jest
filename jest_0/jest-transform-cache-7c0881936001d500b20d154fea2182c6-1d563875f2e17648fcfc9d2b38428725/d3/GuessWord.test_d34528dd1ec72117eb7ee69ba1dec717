e908ea364fcb1d76632e0358fa337b41
"use strict";

var _interopRequireDefault = require("/home/jia/Desktop/tests/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("/home/jia/Desktop/tests/node_modules/@babel/runtime/helpers/objectSpread"));

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _GuessWord = _interopRequireDefault(require("./GuessWord"));

var _testUtil = require("../test/testUtil");

var _types = require("@babel/types");

var _jsxFileName = "/home/jia/Desktop/tests/src/GuessWord.test.js";
const defaultProps = {
  guessedWords: [{
    guessedWord: 'train',
    letterMatchCount: 3
  }]
};

const setup = (props = {}) => {
  const setupProps = (0, _objectSpread2.default)({}, defaultProps, props);
  return (0, _enzyme.shallow)(_react.default.createElement(_GuessWord.default, Object.assign({}, setupProps, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 17
    },
    __self: void 0
  })));
};

test('should not throw warning with expected props', () => {
  (0, _testUtil.checkProps)(defaultProps, _GuessWord.default);
});
describe('if there are no words guessed', () => {
  let wrapper;
  beforeEach(() => {
    wrapper = setup({
      guessedWords: []
    });
  });
  test('should render without error', () => {
    const component = (0, _testUtil.findByTestAttr)(wrapper, 'component-guessed-words');
    expect(component.length).toBe(1);
  });
  test('should render instructions', () => {
    const instructions = (0, _testUtil.findByTestAttr)(wrapper, 'component-instructions');
    expect(instructions.text()).not.toBe(0);
  });
});
describe('if there are words guessed', () => {
  guessedWords = [{
    gueesedWord: 'train',
    letterMatchCount: 3
  }, {
    gueesedWord: 'agile',
    letterMatchCount: 1
  }, {
    gueesedWord: 'party',
    letterMatchCount: 5
  }];
  test('should render without error', () => {});
  test('should render guessed words section', () => {});
  test('should render correct number of guessed words', () => {});
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkd1ZXNzV29yZC50ZXN0LmpzIl0sIm5hbWVzIjpbImRlZmF1bHRQcm9wcyIsImd1ZXNzZWRXb3JkcyIsImd1ZXNzZWRXb3JkIiwibGV0dGVyTWF0Y2hDb3VudCIsInNldHVwIiwicHJvcHMiLCJzZXR1cFByb3BzIiwidGVzdCIsIkd1ZXNzV29yZCIsImRlc2NyaWJlIiwid3JhcHBlciIsImJlZm9yZUVhY2giLCJjb21wb25lbnQiLCJleHBlY3QiLCJsZW5ndGgiLCJ0b0JlIiwiaW5zdHJ1Y3Rpb25zIiwidGV4dCIsIm5vdCIsImd1ZWVzZWRXb3JkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7O0FBRUEsTUFBTUEsWUFBWSxHQUFHO0FBQ2pCQyxFQUFBQSxZQUFZLEVBQUUsQ0FBQztBQUNYQyxJQUFBQSxXQUFXLEVBQUUsT0FERjtBQUVYQyxJQUFBQSxnQkFBZ0IsRUFBRTtBQUZQLEdBQUQ7QUFERyxDQUFyQjs7QUFPQSxNQUFNQyxLQUFLLEdBQUcsQ0FBQ0MsS0FBSyxHQUFHLEVBQVQsS0FBZ0I7QUFDMUIsUUFBTUMsVUFBVSxtQ0FBUU4sWUFBUixFQUF5QkssS0FBekIsQ0FBaEI7QUFDQSxTQUFPLHFCQUFRLDZCQUFDLGtCQUFELG9CQUFlQyxVQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQVIsQ0FBUDtBQUNILENBSEQ7O0FBS0FDLElBQUksQ0FBQyw4Q0FBRCxFQUFpRCxNQUFNO0FBQ3ZELDRCQUFXUCxZQUFYLEVBQXlCUSxrQkFBekI7QUFDSCxDQUZHLENBQUo7QUFJQUMsUUFBUSxDQUFDLCtCQUFELEVBQWtDLE1BQU07QUFDNUMsTUFBSUMsT0FBSjtBQUNBQyxFQUFBQSxVQUFVLENBQUMsTUFBTTtBQUNiRCxJQUFBQSxPQUFPLEdBQUdOLEtBQUssQ0FBQztBQUFFSCxNQUFBQSxZQUFZLEVBQUU7QUFBaEIsS0FBRCxDQUFmO0FBQ0gsR0FGUyxDQUFWO0FBSUFNLEVBQUFBLElBQUksQ0FBQyw2QkFBRCxFQUFnQyxNQUFNO0FBQ3RDLFVBQU1LLFNBQVMsR0FBRyw4QkFBZUYsT0FBZixFQUF3Qix5QkFBeEIsQ0FBbEI7QUFDQUcsSUFBQUEsTUFBTSxDQUFDRCxTQUFTLENBQUNFLE1BQVgsQ0FBTixDQUF5QkMsSUFBekIsQ0FBOEIsQ0FBOUI7QUFDSCxHQUhHLENBQUo7QUFLQVIsRUFBQUEsSUFBSSxDQUFDLDRCQUFELEVBQStCLE1BQU07QUFDckMsVUFBTVMsWUFBWSxHQUFHLDhCQUFlTixPQUFmLEVBQXdCLHdCQUF4QixDQUFyQjtBQUNBRyxJQUFBQSxNQUFNLENBQUNHLFlBQVksQ0FBQ0MsSUFBYixFQUFELENBQU4sQ0FBNEJDLEdBQTVCLENBQWdDSCxJQUFoQyxDQUFxQyxDQUFyQztBQUNILEdBSEcsQ0FBSjtBQU9ILENBbEJPLENBQVI7QUFvQkFOLFFBQVEsQ0FBQyw0QkFBRCxFQUErQixNQUFNO0FBRXpDUixFQUFBQSxZQUFZLEdBQUcsQ0FDWDtBQUNJa0IsSUFBQUEsV0FBVyxFQUFFLE9BRGpCO0FBRUloQixJQUFBQSxnQkFBZ0IsRUFBRTtBQUZ0QixHQURXLEVBS1g7QUFDSWdCLElBQUFBLFdBQVcsRUFBRSxPQURqQjtBQUVJaEIsSUFBQUEsZ0JBQWdCLEVBQUU7QUFGdEIsR0FMVyxFQVNYO0FBQ0lnQixJQUFBQSxXQUFXLEVBQUUsT0FEakI7QUFFSWhCLElBQUFBLGdCQUFnQixFQUFFO0FBRnRCLEdBVFcsQ0FBZjtBQWVBSSxFQUFBQSxJQUFJLENBQUMsNkJBQUQsRUFBZ0MsTUFBTSxDQUV6QyxDQUZHLENBQUo7QUFJQUEsRUFBQUEsSUFBSSxDQUFDLHFDQUFELEVBQXdDLE1BQU0sQ0FFakQsQ0FGRyxDQUFKO0FBSUFBLEVBQUFBLElBQUksQ0FBQywrQ0FBRCxFQUFrRCxNQUFNLENBRTNELENBRkcsQ0FBSjtBQUtILENBOUJPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgc2hhbGxvdyB9IGZyb20gJ2VuenltZSc7XG5cbmltcG9ydCBHdWVzc1dvcmQgZnJvbSAnLi9HdWVzc1dvcmQnO1xuaW1wb3J0IHsgZmluZEJ5VGVzdEF0dHIsIGNoZWNrUHJvcHMgfSBmcm9tICcuLi90ZXN0L3Rlc3RVdGlsJztcbmltcG9ydCB7IGV4cG9ydEFsbERlY2xhcmF0aW9uIH0gZnJvbSAnQGJhYmVsL3R5cGVzJztcblxuY29uc3QgZGVmYXVsdFByb3BzID0ge1xuICAgIGd1ZXNzZWRXb3JkczogW3tcbiAgICAgICAgZ3Vlc3NlZFdvcmQ6ICd0cmFpbicsXG4gICAgICAgIGxldHRlck1hdGNoQ291bnQ6IDNcbiAgICB9XVxufVxuXG5jb25zdCBzZXR1cCA9IChwcm9wcyA9IHt9KSA9PiB7XG4gICAgY29uc3Qgc2V0dXBQcm9wcyA9IHsgLi4uZGVmYXVsdFByb3BzLCAuLi5wcm9wcyB9O1xuICAgIHJldHVybiBzaGFsbG93KDxHdWVzc1dvcmQgey4uLnNldHVwUHJvcHN9IC8+KVxufVxuXG50ZXN0KCdzaG91bGQgbm90IHRocm93IHdhcm5pbmcgd2l0aCBleHBlY3RlZCBwcm9wcycsICgpID0+IHtcbiAgICBjaGVja1Byb3BzKGRlZmF1bHRQcm9wcywgR3Vlc3NXb3JkKVxufSlcblxuZGVzY3JpYmUoJ2lmIHRoZXJlIGFyZSBubyB3b3JkcyBndWVzc2VkJywgKCkgPT4ge1xuICAgIGxldCB3cmFwcGVyO1xuICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgICB3cmFwcGVyID0gc2V0dXAoeyBndWVzc2VkV29yZHM6IFtdIH0pXG4gICAgfSlcblxuICAgIHRlc3QoJ3Nob3VsZCByZW5kZXIgd2l0aG91dCBlcnJvcicsICgpID0+IHtcbiAgICAgICAgY29uc3QgY29tcG9uZW50ID0gZmluZEJ5VGVzdEF0dHIod3JhcHBlciwgJ2NvbXBvbmVudC1ndWVzc2VkLXdvcmRzJylcbiAgICAgICAgZXhwZWN0KGNvbXBvbmVudC5sZW5ndGgpLnRvQmUoMSlcbiAgICB9KVxuXG4gICAgdGVzdCgnc2hvdWxkIHJlbmRlciBpbnN0cnVjdGlvbnMnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGluc3RydWN0aW9ucyA9IGZpbmRCeVRlc3RBdHRyKHdyYXBwZXIsICdjb21wb25lbnQtaW5zdHJ1Y3Rpb25zJyk7XG4gICAgICAgIGV4cGVjdChpbnN0cnVjdGlvbnMudGV4dCgpKS5ub3QudG9CZSgwKVxuICAgIH0pXG5cblxuXG59KVxuXG5kZXNjcmliZSgnaWYgdGhlcmUgYXJlIHdvcmRzIGd1ZXNzZWQnLCAoKSA9PiB7XG5cbiAgICBndWVzc2VkV29yZHMgPSBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGd1ZWVzZWRXb3JkOiAndHJhaW4nLFxuICAgICAgICAgICAgbGV0dGVyTWF0Y2hDb3VudDogM1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBndWVlc2VkV29yZDogJ2FnaWxlJyxcbiAgICAgICAgICAgIGxldHRlck1hdGNoQ291bnQ6IDFcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgZ3VlZXNlZFdvcmQ6ICdwYXJ0eScsXG4gICAgICAgICAgICBsZXR0ZXJNYXRjaENvdW50OiA1XG4gICAgICAgIH1cbiAgICBdXG5cbiAgICB0ZXN0KCdzaG91bGQgcmVuZGVyIHdpdGhvdXQgZXJyb3InLCAoKSA9PiB7XG5cbiAgICB9KVxuXG4gICAgdGVzdCgnc2hvdWxkIHJlbmRlciBndWVzc2VkIHdvcmRzIHNlY3Rpb24nLCAoKSA9PiB7XG5cbiAgICB9KVxuXG4gICAgdGVzdCgnc2hvdWxkIHJlbmRlciBjb3JyZWN0IG51bWJlciBvZiBndWVzc2VkIHdvcmRzJywgKCkgPT4ge1xuXG4gICAgfSlcblxuXG59KSJdfQ==